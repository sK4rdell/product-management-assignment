version: "3.8"

services:
  schema-registry:
    profiles:
      - dev
    image: confluentinc/cp-schema-registry:latest
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka:9092"
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"

  schema-register:
    image: curlimages/curl
    profiles:
      - dev
    volumes:
      - ./schemas:/schemas
      - ./scripts/register-schemas.sh:/register-schemas.sh
    command: ["/bin/sh", "/register-schemas.sh"]
    depends_on:
      schema-registry:
        condition: service_healthy

  # backend:
  #   image: my-backend-image
  #   depends_on:
  #     schema-register:
  #       condition: service_completed_successfully
  #   environment:
  #     DATABASE_URL: "postgres://user:password@db:5432/mydatabase"
  #     KAFKA_BROKERS: "kafka:9092"
  #     SCHEMA_REGISTRY_URL: "http://schema-registry:8081"

  kafka:
    image: confluentinc/cp-kafka:latest
    profiles:
      - dev
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LISTENERS: "PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CLUSTER_ID: "ciw19XiMS1GLQKLXNPqKlw"
    ports:
      - "9092:9092"
      - "9093:9093"

  db:
    image: postgres:latest
    profiles:
      - dev
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: products
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  kafka-data:
  postgres-data:
